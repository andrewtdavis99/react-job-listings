{"version":3,"sources":["compnents/JobBoardComponent.js","App.js","index.js"],"names":["JobBoardComponent","job","handleTagClick","tags","role","level","tools","push","languages","className","featured","src","logo","alt","company","new","position","postedAt","contract","location","map","tag","i","onClick","App","useState","jobs","setJobs","filters","setFilters","useEffect","data","includes","filteredJobs","filter","length","some","passedFilter","f","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA0CeA,EAxCW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,IAAOC,EAAoB,EAApBA,eACzBC,EAAO,CAACF,EAAIG,KAAMH,EAAII,OAU5B,OARIJ,EAAIK,OACJH,EAAKI,KAAL,MAAAJ,EAAI,YAASF,EAAIK,QAGjBL,EAAIO,WACJL,EAAKI,KAAL,MAAAJ,EAAI,YAASF,EAAIO,YAIrB,sBAAiBC,UAAS,4EACnBR,EAAIS,UAAY,uDADG,wBAA1B,UAEI,qBAAKD,UAAU,aAAf,SACI,qBAAKA,UAAU,qCAAqCE,IAAKV,EAAIW,KAAMC,IAAKZ,EAAIa,YAEhF,sBAAKL,UAAU,0CAAf,UACI,qBAAIA,UAAU,+BAAd,UACKR,EAAIa,QACJb,EAAIc,KACJ,sBAAMN,UAAU,2EAAhB,iBAEAR,EAAIS,UACJ,sBAAMD,UAAU,sEAAhB,yBAGL,oBAAIA,UAAU,yBAAd,SAAwCR,EAAIe,WAC5C,oBAAGP,UAAU,gBAAb,UAA8BR,EAAIgB,SAAlC,SAA+ChB,EAAIiB,SAAnD,SAAgEjB,EAAIkB,eAExE,qBAAKV,UAAU,sHAAf,SAEKN,EAAKiB,KAAI,SAACC,EAAKC,GAAN,OACV,sBAAcC,QAAS,kBAAMrB,EAAemB,IAAMZ,UAAU,qEAA5D,SAAkIY,GAAvHC,UArBV,U,OCkFEE,MA1Ff,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACLC,EADK,KACCC,EADD,OAEkBF,mBAAS,IAF3B,mBAELG,EAFK,KAEIC,EAFJ,KAIZC,qBAAU,WACPH,EAAQI,KACR,IAMH,IAmBM7B,EAAiB,SAACmB,GAElBO,EAAQI,SAASX,IAEpBQ,EAAW,GAAD,mBAAKD,GAAL,CAAcP,MAWrBY,EAAeP,EAAKQ,QAlCH,SAAC,GAAqC,IAApC9B,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,UACtCL,EAAO,CAACC,EAAMC,GAGpB,OAAuB,IAAnBuB,EAAQO,SAIR7B,GACAH,EAAKI,KAAL,MAAAJ,EAAI,YAASG,IAGbE,GACAL,EAAKI,KAAL,MAAAJ,EAAI,YAASK,IAGVL,EAAKiC,MAAK,SAAAf,GAAG,OAAIO,EAAQI,SAASX,UAqB3C,OACE,sBAAKZ,UAAU,MAAf,UACE,wBAAQA,UAAU,oBAAlB,SACE,qBAAKE,IAAI,gCAAgCE,IAAI,eAE/C,sBAAKJ,UAAU,mBAAf,UAEImB,EAAQO,OAAS,GACjB,sBAAK1B,UAAU,0EAAf,UAECmB,EAAQR,KAAI,SAACc,EAAQZ,GAAT,OACX,qBAAab,UAAU,WAAvB,SACE,uBACAA,UAAU,wDADV,UAECyB,EACD,sBAAMzB,UAAU,kEAAkEc,QAAS,kBA1B3Ec,EA2BEH,OA1B1BL,EAAWD,EAAQM,QAAO,SAACI,GAAD,OAAOA,IAAMD,MADhB,IAACA,GA0BhB,sBAJQf,MASZ,wBAAQb,UAAU,8BAA8Bc,QA3BlC,WACnBM,EAAW,KA0BN,sBAIc,IAAhBH,EAAKS,OACH,qDAEAF,EAAab,KAAI,SAAAnB,GAAG,OAClB,cAAC,EAAD,CACEA,IAAKA,EAELC,eAAgBA,GADXD,EAAIsC,cC/EvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.3990dccc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst JobBoardComponent = ({job ,  handleTagClick}) => {\r\n    const tags = [job.role, job.level];\r\n\r\n    if (job.tools) {\r\n        tags.push(...job.tools);\r\n    }\r\n\r\n    if (job.languages) {\r\n        tags.push(...job.languages)\r\n    }\r\n\r\n    return (\r\n    <div key=\"{key}\" className={`flex flex-col bg-white shadow-md my-16 mx-10 p-4 rounded\r\n        ${ job.featured && 'border-l-4 border-black border-blue-400 border-solid'} sm:flex-row sm:my-4`}>\r\n        <div className='sm:my-auto'>\r\n            <img className='-mt-14 mb-4  w-20  sm:mt-0 sm:mr-4' src={job.logo} alt={job.company}></img>\r\n        </div>\r\n        <div className='flex flex-col justify-between  p-2 pb-6'>\r\n            <h3 className='font-bold mb-2 text-blue-400'>\r\n                {job.company}\r\n                {job.new && \r\n                (<span className='text-white text-sm bg-blue-400 font-bold m-2 ml-4 py-1 px-2 rounded-full'>NEW</span>)\r\n                }\r\n                {job.featured && \r\n                (<span className='text-white text-sm bg-gray-800 font-bold m-2 py-1 px-2 rounded-full'>FEATURED</span>)\r\n                }\r\n            </h3>\r\n            <h2 className='font-bold mb-2 text-xl'>{job.position}</h2>\r\n            <p className='text-gray-500'>{job.postedAt} · {job.contract} · {job.location}</p>\r\n        </div>\r\n        <div className='flex flex-wrap items-center  pt-4 border-t-2 border-gray-200 border-solid \r\n                        sm:ml-auto sm:border-0 sm:pt-0 sm:mt-0'>\r\n            {tags.map((tag, i) => \r\n            <span key={i} onClick={() => handleTagClick(tag)} className='text-blue-400 bg-blue-200 font-bold cursor-pointer m-2 p-2 rounded'>{tag}</span>)} \r\n            \r\n        </div>\r\n    </div>\r\n    )}\r\n\r\n\r\nexport default JobBoardComponent;","import React, {useState, useEffect} from \"react\";\r\nimport JobBoardComponent from './compnents/JobBoardComponent';\r\nimport data from './assets/data.json';\r\n\r\n\r\n\r\nfunction App() {\r\n   const [jobs, setJobs] = useState([]);\r\n   const [filters, setFilters] = useState([]);\r\n\r\n   useEffect(() => { \r\n      setJobs(data);  \r\n   }, [])\r\n\r\n   \r\n\r\n   \r\n\r\n   const filterFunction = ({role, level, tools, languages}) => {\r\n    const tags = [role, level];\r\n\r\n\r\n    if (filters.length === 0) {\r\n      return true;\r\n    }\r\n\r\n    if (tools) {\r\n        tags.push(...tools);\r\n    }\r\n\r\n    if (languages) {\r\n        tags.push(...languages)\r\n    }\r\n    \r\n    return tags.some(tag => filters.includes(tag));\r\n   };\r\n\r\n   const handleTagClick = (tag) => {\r\n     // Avoid re adding the tag\r\n     if (filters.includes(tag)) return;\r\n\r\n      setFilters([...filters, tag]);\r\n   }\r\n\r\n   const handleFilterClick = (passedFilter) => {\r\n      setFilters(filters.filter((f) => f !== passedFilter))\r\n   }\r\n\r\n   const clearFilters = () => {\r\n     setFilters([]);\r\n   }\r\n\r\n   const filteredJobs = jobs.filter(filterFunction);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className='bg-blue-200 mb-12'>\r\n        <img src='/images/bg-header-desktop.svg' alt='bg-image' />\r\n      </header>\r\n      <div className='container m-auto'>\r\n        {\r\n          filters.length > 0 && (\r\n          <div className='flex flex-wrap bg-white shadow-md my-16 mx-10 p-4 rounded\r\n         sm:flex-row'>\r\n          {filters.map((filter, i) => (\r\n            <div key={i} className='m-2 my-4' >\r\n              <span \r\n              className='text-blue-400 bg-blue-200 font-bold pl-2 py-2 rounded'>\r\n              {filter}\r\n              <span className=' p-2 text-white  bg-blue-400 cursor-pointer ml-2 mr-0 rounded-r' onClick={() => \r\n              handleFilterClick(filter)}>×</span>\r\n              </span>  \r\n            </div> \r\n          ))}\r\n          <button className='font-bold text-gray-300 m-2' onClick={clearFilters}>Clear</button>\r\n          </div>\r\n          )}\r\n      {\r\n        jobs.length === 0 ? (\r\n          <p>Jobs are fetching...</p>\r\n        ) : (\r\n          filteredJobs.map(job => (\r\n            <JobBoardComponent \r\n              job={job}  \r\n              key={job.id}\r\n              handleTagClick={handleTagClick}\r\n            />\r\n          ))\r\n        )\r\n      }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// TODOs\r\n// 1. Study the design & json *\r\n// 2. Create the Job board component *\r\n// 3. Get the data from json *\r\n// 4. Pass down data to JBC *\r\n// 5. Style it *\r\n// 5.b. Style mobile \r\n// 6. Filter component\r\n// 7. Filter data\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}